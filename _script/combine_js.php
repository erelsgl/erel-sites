<?php
/**
 * @file combine_js.php
 * combine several Javascript source files to a single file, for quicker loading.
 *
 * @example 1 
	https://server.name/combine_js.php?PARAMS
 * 
 *	Where PARAMS should contain one parameter:
 *		files=[list_of_paths_to_js_files]: list of paths from the file-root to the seperate Javascript files, without the 'js' extension.
 * and other optional parameters:
 * 		out=path from root to output file (default is to print to standard output, with text/javascript header)
 * 		minify=0 to NOT minify (default is to minify)
 * 
 * @author Erel Segal-Halevi
 * @date 2007-03-05
 * 
 */

require_once dirname(__FILE__).'/coalesce.php';

$GLOBALS['REPORT_STRICT']=false; 
require_once dirname(__FILE__).'/minify_php4/minify.php';
$GLOBALS['REPORT_STRICT']=true;

error_reporting(E_ALL);

$outfile = coalesce($_GET['out'],"");
$minify = coalesce($_GET['minify'],TRUE);

$reverse_direction = (isset($_GET['source_direction']) && isset($_GET['target_direction']) && $_GET['source_direction']!==$_GET['target_direction']);


/**
 * Root for reading the input file
 */
$FILEROOT = realpath(dirname(__FILE__) . "/..");

if (!isset($_GET['files']))
	die('bad syntax - must enter files!');

$files = preg_split("/[+ ]/", $_GET['files']);

if (!isset($_SERVER['QUERY_STRING']))
	$_SERVER['QUERY_STRING']="files=$_GET[files]&out=$outfile&minify=$minify";

$js = '';

$js .= "var target_direction = '".coalesce($_GET['target_direction'],'')."';\n";

if ($outfile) print "<p>combining</p>\n";
foreach ($files as $file) {
	if ($reverse_direction) {
		$file = preg_replace("/right/", "XXX_TEMPORARY_XXX", $file);
		$file = preg_replace("/left/", "right", $file);
		$file = preg_replace("/XXX_TEMPORARY_XXX/", "left", $file);
	}

	$js .= "\n\n/* $file */\n\n";
	$full_path = (preg_match("/http/", $file)? $file: "$FILEROOT/$file.js");
	$contents = file_get_contents($full_path);
	$contents = preg_replace("|^//.*\n|m","", $contents);

	if ($outfile) print "<p>$file: ".strlen($contents)." bytes</p>";

	$js .= $contents;
}


if ($outfile) print "<p>TOTAL: ".strlen($js)." bytes</p>";

if ($minify) {
	if ($outfile) print "<p>minifying</p>\n";
	$GLOBALS['REPORT_STRICT']=false; // Non-static method Minify::minifyJS() should not be called statically
	$js = Minify::minifyJS($js);
	$GLOBALS['REPORT_STRICT']=true;

	if ($outfile) print "<p>minified: ".strlen($js)." bytes</p>";
}

$js = "/*\nThis file was automatically generated by:\n\t$_SERVER[PHP_SELF]?$_SERVER[QUERY_STRING]\nDon't edit it directly!\n*/\n$js";


if ($outfile) {
	print "<p>writing to output file</p>\n";
	file_put_contents("$FILEROOT/$outfile.js", $js);
	echo "<p>Combined file is in $FILEROOT/$outfile.js</p>\n";
} else {
	header('content-type: text/javascript');
	echo $js;
}

//https://localhost/_script/combine_js.php?files=_script/jquery-1.3.1.min+_script/jquery.hoverIntent.min+_script/vars0+_script/cookies+_script/rtelang/en+_script/rte+_script/elements+_script/form_validation+_script/fields+_script/arguments+_script/sites+_script/dates/dates+_script/templates+_script/magrim+https://www.google.com/friendconnect/script/friendconnect.js+_script/search+_script/etc+_script/jquery.taconite&out=_script/vars&minify=1

?>