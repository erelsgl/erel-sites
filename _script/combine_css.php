<?php
/**
 * @file combine_css.php
 * combine several CSS source files to a single minified file for quicker loading.
 *  
 * @example 1 
 *	https://server.name/combine_css.php?PARAMS
 *	 
 * GET params:
 *		files = [list_of_paths_to_css_files]: list of paths from the file-root to the seperate Javascript files, without the 'css' extension.
 *		out = path from root to output file.
 *		source_direction = ltr or rtl; current direction of source files.
 *		target_direction = ltr or rtl; required direction of target file.
 * 		minify=0 to NOT minify (default is to minify)
 * 
 * @author Erel Segal, Erez Segal
 * @date 2007-03-05
 */

require_once dirname(__FILE__).'/coalesce.php';
require_once dirname(__FILE__).'/minify_php4/minify.php';

error_reporting(E_ALL);

/**
 * Root for reading the input file
 */
$FILEROOT = realpath(dirname(__FILE__) . "/..");

if (!isset($_GET['files']))
	die('bad syntax - must enter files!');

$outfile = coalesce($_GET['out'],"");
$minify = coalesce($_GET['minify'],TRUE);
$extra_ratio = coalesce($_GET['ratio'],1);

$reverse_direction = (isset($_GET['source_direction']) && isset($_GET['target_direction']) && $_GET['source_direction']!==$_GET['target_direction']);

$files = preg_split("/[+ ]/", $_GET['files']);

if (!isset($_SERVER['QUERY_STRING']))
	$_SERVER['QUERY_STRING']="files=$_GET[files]&out=$outfile&minify=$minify";

$css = "/*\nThis file was automatically generated by:\n\t$_SERVER[PHP_SELF]?$_SERVER[QUERY_STRING]\nDon't edit it directly!\n*/\n";
foreach ($files as $file) {
	$css .= "\n\n/* $file */\n\n";
	$contents = preg_replace("|^//.*\n|m","",
		file_get_contents("$FILEROOT/$file.css"));
	if ($reverse_direction) {
		$contents = preg_replace("/(\b|_)right(\b|_)/i", "$1XXX_TEMPORARY_XXX$2", $contents);
		$contents = preg_replace("/(\b|_)left(\b|_)/i", "$1right$2", $contents);
		$contents = preg_replace("/XXX_TEMPORARY_XXX/", "left", $contents);

		$contents = preg_replace("/(margin|padding)\s*:\s*([-0-9.a-z]+)\s+([-0-9.a-z]+)\s+([-0-9.a-z]+)\s+([-0-9.a-z]+)/", "$1: $2 $5 $4 $3", $contents);
	}

	if ($outfile) print "<p>$file: ".strlen($contents)." bytes</p>";
	
	$css .= $contents;
}

if ($outfile) print "<p>TOTAL: ".strlen($css)." bytes</p>";

if ($minify) {
	if ($outfile) print "<p>minifying</p>\n";
	$css = Minify::minifyCSS($css);

	if ($outfile) print "<p>minified: ".strlen($css)." bytes</p>";
}

if ($extra_ratio <> 1) {
	$css_ratio = $css;
	$offset = 0;
	$css = preg_replace("/(\d+)px/e", "($1 <= 3 ? $1 :  floor($1*{$extra_ratio})).'px'", $css);
}

if ($outfile) {
	file_put_contents("$FILEROOT/$outfile.css", $css);
	echo "<p>Combined file is in $outfile.css</p>\n";
} else {
	header('content-type: text/javascript');
	echo $css;
}

?>